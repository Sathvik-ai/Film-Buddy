<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile Page with Orders Section</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous" />
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" ></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js" integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV" crossorigin="anonymous"></script>
    <script src="https://kit.fontawesome.com/cf4baec49e.js" crossorigin="anonymous"></script>
    
    <style>
        /* General Styles */
        body { font-family: Arial, sans-serif; margin: 0; padding: 0; background-color:black;color:white;}
        .profile-container { width: 100%; border-radius: 10px; text-align: center; overflow: hidden; }

        /* Banner Styling */
        .banner { width: 100%; height: 200px; background-image: url('https://img.freepik.com/premium-photo/camera-set-with-blue-orange-background-camera-set-up_1185498-101705.jpg?semt=ais_hybrid'); background-size: cover; background-position: center; position: relative; }

        /* Left-Aligned Profile Photo Overlapping Style */
        .profile-photo { 
            width: 100px; 
            height: 100px; 
            border-radius: 50%; 
            background-color: red; 
            display: flex; 
            align-items: center; 
            justify-content: center; 
            font-size: 2em; 
            color: #fff; 
            border: 5px solid #fff;
            position: absolute;
            bottom: -40px;
            left: 20px;
        }
        strong { color: #eb1e1e; }
        .signined-mail{
            border-radius:50%;
        }
        /* Profile Details */
        .profile-details {color:white; padding: 60px 20px 20px; text-align: left; }
        .profile-details p { margin: 5px 0; }
        .edit-button { background-color: #333; color: #fff; padding: 10px; border: none; cursor: pointer; border-radius: 5px; }

        /* Orders Section Styling */
        .orders-section {
            margin-left: 20px;
            margin-bottom:40px;
            width:40%;
            padding: 20px;
            background-color: #362c2c;
            display:flex;
            flex-direction:column;
        }
        .order-item {
            display: flex;
            justify-content: space-between;
            padding: 10px 0;
            border-bottom: 1px solid #444;
            align-items: center;
        }
        .order-item:last-child {
            border-bottom: none;
        }
        .order-item-details {
            flex: 1;
            display: flex;
            flex-direction: column;
            color: white;
        }
        .order-item-price {
            font-weight: bold;
            color: #eb1e1e;
        }
        .ship-order-btn {
            margin-top: 20px;
            padding: 10px;
            width: 40%;
            font-weight: bold;
            background-color: #eb1e1e;
            color: white;
            border: none;
            cursor: pointer;
            align-self:flex-end;
        }
        .but{
            border-radius:50%;
        }
        .navs{
            font: size 17px;
            margin-right:10px;
            font-family: "Roboto Condensed", Sans-serif;
        }
        .buddy{
            color:red;
        }
         /* Modal Styling */
         .modal {  
            position: absolute;
            top: 0; 
            left: 0; 
            width: 100%; 
            height: 100%; 
            background-color: rgba(0,0,0,0.5);
            display:flex;
            justify-content:center;
            align-items:center;
            z-index: 1;
        }

        /* Animation for sliding down */
        .modal-content {
            background-color: black;
            padding: 20px; 
            border: 1px solid #888; 
            width: 90%; 
            max-width: 500px; 
            border-radius: 8px; 
            text-align: left; 
            transform: translateY(-100vh);
            animation: slideDown 0.5s forwards;
        }

        /* Keyframes for sliding animation */
        @keyframes slideDown {
            0% { transform: translateY(-100vh); }
            100% { transform: translateY(0); }
        }

        .close { color: #aaa; float: right; font-size: 28px; font-weight: bold; cursor: pointer; }
        .close:hover, .close:focus { color: black; text-decoration: none; cursor: pointer; }
        .modal input, .modal textarea { width: 100%; padding: 10px; margin: 10px 0; border: 1px solid #ddd; border-radius: 5px; }
        .save-button { background-color: #4CAF50; color: #fff; padding: 10px; border: none; cursor: pointer; border-radius: 5px; width: 100%; }

    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark custom-navbar">
        <a class="navbar-brand" style='font-weight:600;font-size:40px;' href="/">FILM<span class="buddy">BUDDY</span></a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav ml-auto">
            <li class="nav-item active navs">
              <a class="nav-link" href="/" onclick="navHomePage()">HOME <span class="sr-only">(current)</span></a>
            </li>
            <li class="nav-item active navs">
              <a class="nav-link" href="/podcast">PODCAST</a>
            </li>
            <li class="nav-item active navs">
              <a class="nav-link" href="/movies" onclick="navMoviesPage()">MOVIES</a>
            </li>
            <li class="nav-item active navs">
              <a class="nav-link" href="/course" onclick="navLearnPage()">LEARN</a>
            </li>
            <li class="nav-item active navs">
                <a class="nav-link" href="/store" onclick="navStorePage()">STORE</a>
              </li>
              <li class="nav-item dropdown active navs">
                <div class="dropdown">
                <% if (locals.user) { %>
                    <div class="mail-logo" href="#" id="userDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                       <button class="btn btn-outline-danger signined-mail"> <%= locals.user.name[0]  %> </button>
                    </div>
                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="userDropdown">
                        <% if (locals.user && locals.user.isAdmin) { %>
                            <a href="/admin" class="dropdown-item">Profile</a>
                        <% } else { %>
                            <a href="/profile" class="dropdown-item">Profile</a>
                        <% } %>                        
                        <form id="logout-form" action="/logout" method="post">
                            <button type="submit" class="dropdown-item">Logout</button>
                        </form>
                    </div>
                <% } else { %>        
                    <button class="btn btn-danger" onclick="window.location.href='/login'">SIGN IN</button>
                <% } %>
                </div>
            </li>
          </ul>
        </div>
    </nav>

    <!-- Profile Section -->
    <div class="profile-container">
        <div class="banner">
            <div class="profile-photo" id="profilePhoto">A</div>
        </div>
        <div class="profile-details">
            <p><strong>USER NAME:</strong> <span id="username"><%= user.name %></span></p>
            <p><strong>EMAIL:</strong> <span id="email"><%= user.email %></span></p>
            <p><strong>PHONE NUMBER:</strong> <span id="phone">1234567890</span></p>
            <p><strong>INTERESTED FIELDS:</strong> <span id="interests">Filmmaking, Editing</span></p>
            <p><strong>ADDRESS:</strong> <span id="address">123 Main St, Mumbai</span></p>
            <p><strong>BIO:</strong> <span id="bio">Passionate about filmmaking.</span></p>
            <button class="btn btn-danger mt-3" onclick="openModal()">Edit Profile</button>
        </div>
    </div>

    <!-- Orders Section -->
    <div class="orders-section">
        <h3>Your Orders</h3>
        <div id="orderList"></div>
        <button class="ship-order-btn" onclick="placeOrder()">Ship Order</button>
    </div>

    <div id="editModal" class="modal d-none">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <h2>Edit Profile</h2>
            <label for="editUsername">Username:</label>
            <input type="text" id="editUsername" value="<%= user.name %>" />
            <label for="editEmail">Email:</label>
            <input type="email" id="editEmail" value="<%= user.email %>" />
            <label for="editPhone">Phone Number:</label>
            <input type="tel" id="editPhone" value="1234567890" />
            <label for="editInterests">Interested Fields:</label>
            <input type="text" id="editInterests" value="Filmmaking, Editing" />
            <label for="editBio">Bio:</label>
            <textarea id="editBio">Passionate about filmmaking.</textarea>
            <button class="btn btn-danger mt-2" onclick="saveProfile()">Save Changes</button>
        </div>
    </div>

    <script>
        // Declare the cartItems array
        let cartItems = [];
    
        // Displaying default profile photo if no photo is provided
        const email = document.getElementById("email").innerText;
        document.getElementById("profilePhoto").innerText = email.charAt(0).toUpperCase();
    
        async function fetchProducts() {
            try {
                const response = await fetch('/products'); // Adjust the API endpoint as needed
                const products = await response.json();
                cartItems = products; // Populate the cartItems array with fetched products
                displayCartItems(cartItems); // Display the items in the orders section
            } catch (error) {
                console.error("Error fetching products:", error);
                cartItems = []; // Ensure cartItems is empty on error
            }
        }
    

        function openModal() { document.getElementById("editModal").classList.remove("d-none"); }
        function closeModal() { document.getElementById("editModal").classList.add("d-none"); }

        // Saving profile changes
        function saveProfile() {
            document.getElementById("username").innerText = document.getElementById("editUsername").value;
            document.getElementById("email").innerText = document.getElementById("editEmail").value;
            document.getElementById("phone").innerText = document.getElementById("editPhone").value;
            document.getElementById("interests").innerText = document.getElementById("editInterests").value;
            document.getElementById("bio").innerText = document.getElementById("editBio").value;
            closeModal();
        }


        // Function to display cart items in the "Your Orders" section
        function displayCartItems(products) {
            const orderList = document.getElementById('orderList');
            orderList.innerHTML = ''; // Clear any existing content
    
            products.forEach((item, index) => {
                const orderItem = document.createElement('div');
                orderItem.classList.add('order-item');
    
                orderItem.innerHTML = `
                    <div class="order-item-details">
                        <span><strong>Product:</strong> ${item.title}</span>
                        <span><strong>Quantity:</strong> ${item.quantity}</span>
                    </div>
                    <div class="order-item-price">$${(item.price * item.quantity).toFixed(2)}</div>
                    <button class="btn btn-danger btn-sm ml-3" onclick="removeItem(${index})">X</button>
                `;
                orderList.appendChild(orderItem);
            });
        }
    
        // Function to remove an item from the cart
        function removeItem(index) {
            cartItems.splice(index, 1); // Remove item from cartItems array
            displayCartItems(cartItems); // Refresh the displayed items
        }
    
        // Calculate total price
        function calculateTotalPrice() {
            return cartItems.reduce((total, item) => total + item.price * item.quantity, 0).toFixed(2);
        }
    
        async function placeOrder() {
    const totalPrice = calculateTotalPrice();
    const userDetails = {
        username: document.getElementById("username").innerText,
        address: document.getElementById("address").innerText,
        email: document.getElementById("email").innerText,
        phone: document.getElementById("phone").innerText
    };

    const orderData = {
        userDetails: userDetails,
        cartItems: cartItems, // cartItems from your existing variable
        totalPrice: totalPrice
    };

    try {
        const response = await fetch('/orders', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(orderData)
        });

        if (response.ok) {
            const result = await response.json();
            alert(result.message);

            // Clear the orders section and show a confirmation message
            cartItems = []; // Reset cart items
            document.getElementById("orderList").innerHTML = ''; // Clear the displayed orders
            document.getElementById("orderList").innerHTML = '<p>Your order has been successfully placed and is being processed for shipping.</p>';

        } else {
            alert("Failed to place order.");
        }
    } catch (error) {
        console.error("Error placing order:", error);
        alert("An error occurred.");
    }
}

    // Call the fetch function when the page loads
    window.onload = fetchProducts;
    </script>
    
</body>
</html>